@using System.Threading.Tasks
@using Microsoft.AspNetCore.Routing
@using Sakura.AspNetCore
@model IPagedList<object>

<link rel="stylesheet" href="css/StyleSheet.css">
<div class="center">
    <ul class="pagination">
        @{
            int lowerBound = Math.Max(1, Model.PageIndex - 5);
            for (int page = lowerBound; page < Model.PageIndex; page++)
            {<li>@Html.ActionLink(page + " ", "Index", "Videos", new RouteValueDictionary { { "Page", page } })</li>}
            if (Model.IsFirstPage())
            {<li>@Html.ActionLink("First", "Index", "Videos",null, new { @class = "active" })</li>}
            else if (Model.IsLastPage())
            {<li>@Html.ActionLink("Last", "Index", "Videos", new RouteValueDictionary { { "Page", Model.PageIndex } }, new { @class = "active" })</li>}
            else
            {<li>@Html.ActionLink(Model.PageIndex.ToString(), "Index", "Videos", new RouteValueDictionary { { "Page", Model.PageIndex } }, new { @class = "active" })</li>}
            int upperBound = Math.Min(Model.TotalPage, Model.PageIndex + 5);
            for (int page = Model.PageIndex + 1; page < upperBound; page++)
            {<li>@Html.ActionLink(page + " ", "Index", "Videos", new RouteValueDictionary { { "Page", page } })</li>}
        }
    </ul>
</div>

@using System.Threading.Tasks
@using Microsoft.AspNetCore.Routing
@model PaginationViewModel

<link rel="stylesheet" href="~/css/StyleSheet.css">
<div class="center">
    <ul class="pagination">
        @{

            int lowerBound = Math.Max(1, Model.CurrentPage - 5);
            for (int page = lowerBound; page < Model.CurrentPage; page++)
            {
                RouteValueDictionary routeValue = new RouteValueDictionary(Model.RouteValues);
                routeValue["page"] = page;
                <li>@Html.ActionLink(page + " ", Model.ActionName, Model.ControllerName, routeValue)</li>}
            if (Model.IsFirstPage)
            {
                <li>@Html.ActionLink("First", Model.ActionName, Model.ControllerName, null, new { @class = "active" })</li>}
            else if (Model.IsLastPage)
            {
                <li>@Html.ActionLink("Last", Model.ActionName, Model.ControllerName, Model.RouteValues, new { @class = "active" })</li>}
            else
            {
                <li>@Html.ActionLink(Model.CurrentPage.ToString(), Model.ActionName, Model.ControllerName, Model.RouteValues, new { @class = "active" })</li>}
            int upperBound = Math.Min(Model.PageCount, Model.CurrentPage + 5);
            for (int page = Model.CurrentPage + 1; page < upperBound; page++)
            {
                RouteValueDictionary routeValue = new RouteValueDictionary(Model.RouteValues);
                routeValue["page"] = page;
                <li>@Html.ActionLink(page + " ", Model.ActionName, Model.ControllerName, routeValue)</li>}
        }
    </ul>
</div>
